import random
import string
import sys


def generate_password(length=8, use_letters=True, use_digits=True, use_symbols=True):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å.

    :param length: –î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è (–º–∏–Ω–∏–º—É–º 4)
    :param use_letters: –í–∫–ª—é—á–∞—Ç—å –±—É–∫–≤—ã (a-z, A-Z)
    :param use_digits: –í–∫–ª—é—á–∞—Ç—å —Ü–∏—Ñ—Ä—ã (0-9)
    :param use_symbols: –í–∫–ª—é—á–∞—Ç—å —Å–∏–º–≤–æ–ª—ã (!@#$%&)
    :return: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
    """
    if length < 4:
        return "–û—à–∏–±–∫–∞: –¥–ª–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 4 —Å–∏–º–≤–æ–ª–æ–≤."

    if not (use_letters or use_digits or use_symbols):
        return "–û—à–∏–±–∫–∞: –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–∏–ø —Å–∏–º–≤–æ–ª–æ–≤."

    characters = ""
    if use_letters:
        characters += string.ascii_letters  # a-z, A-Z
    if use_digits:
        characters += string.digits        # 0-9
    if use_symbols:
        characters += "!@#$%&"

    # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ö–æ—Ç—è –±—ã –ø–æ –æ–¥–Ω–æ–º—É —Å–∏–º–≤–æ–ª—É –∫–∞–∂–¥–æ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
    password = []
    if use_letters:
        password.append(random.choice(string.ascii_letters))
    if use_digits:
        password.append(random.choice(string.digits))
    if use_symbols:
        password.append(random.choice("!@#$%&"))

    # –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫
    for _ in range(length - len(password)):
        password.append(random.choice(characters))

    # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º
    random.shuffle(password)
    return ''.join(password)


def main():
    print("üîê –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π\n")

    try:
        length = int(input("–î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 8‚Äì16): "))
    except ValueError:
        print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
        sys.exit(1)

    print("–í–∫–ª—é—á–∏—Ç—å –≤ –ø–∞—Ä–æ–ª—å:")
    use_letters = input("–ë—É–∫–≤—ã (a-z, A-Z)? (–¥/–Ω) ").strip().lower() in ['–¥', 'y', 'yes', '–¥–∞']
    use_digits = input("–¶–∏—Ñ—Ä—ã (0-9)? (–¥/–Ω) ").strip().lower() in ['–¥', 'y', 'yes', '–¥–∞']
    use_symbols = input("–°–∏–º–≤–æ–ª—ã (!@#$%&)? (–¥/–Ω) ").strip().lower() in ['–¥', 'y', 'yes', '–¥–∞']

    password = generate_password(length, use_letters, use_digits, use_symbols)
    print(f"\n‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: {password}")


if __name__ == "__main__":
    main()