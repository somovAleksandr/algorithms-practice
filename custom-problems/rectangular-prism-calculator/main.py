def calculate_sqr_of_parallelepiped(a: int, b: int, c: int) -> int:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –ø–ª–æ—â–∞–¥—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞.

    –§–æ—Ä–º—É–ª–∞: S = 2*(ab + bc + ac)

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        a (int): –¥–ª–∏–Ω–∞
        b (int): —à–∏—Ä–∏–Ω–∞
        c (int): –≤—ã—Å–æ—Ç–∞

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        int: –ø–ª–æ—â–∞–¥—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
    """
    return 2 * (a * b + b * c + a * c)


def get_sides_of_parallelepiped():
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—Ä–∏ —Å—Ç–æ—Ä–æ–Ω—ã –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        tuple: (length, width, height) ‚Äî —Ü–µ–ª—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞
    """
    def get_positive_int(prompt: str) -> int:
        """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ."""
        while True:
            value = input(prompt)
            try:
                num = int(value)
                if num <= 0:
                    print("–û—à–∏–±–∫–∞: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.")
                    continue
                return num
            except ValueError:
                print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")

    length = get_positive_int("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞: ")
    width = get_positive_int("–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞: ")
    height = get_positive_int("–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞: ")

    return length, width, height


def start_program():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É: –≤–≤–æ–¥ ‚Üí —Ä–∞—Å—á—ë—Ç ‚Üí –≤—ã–≤–æ–¥."""
    print("üìê –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–ª–æ—â–∞–¥–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞")
    a, b, c = get_sides_of_parallelepiped()
    result = calculate_sqr_of_parallelepiped(a, b, c)
    print(f"–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞ —Å —Ä—ë–±—Ä–∞–º–∏ {a}, {b}, {c} —Ä–∞–≤–Ω–∞: {result}")


if __name__ == "__main__":
    start_program()